Frontend:
  - Fix CSS to properly validate.
  - Add methods to get extra stylesheets, JavaScripts.
  - Add method to frontend class (or options to config file) to configure rate
    limit and period of error reporting, for debugging.

Backend:
  - Test Python coverage in unit tests.
  - Add method to get version number of the web service (see Build).
  - Run/check jobs using DRMAA
    - Build DRMAA Python extension (fix SWIG problems with newer SWIG so that
      the example programs run).
    - Set up for both Sali and QB3 clusters; make sure we can access both via
      DRMAA from the same script (fix problems with environment variable
      clashes if necessary).
    - Make sure that DRMAA on the QB3 cluster works with users that have
      different usernames on modbase/chef (e.g. Hao, SJ, Ursula).
    - Use drmaa_wait or drmaa_synchronize to wake up backend daemon as soon
      as a job finishes (may need to thread; make sure only one event client
      per daemon); fall back to polling if the daemon is restarted.

Build:
  - Add more unit tests.
  - After installing each CGI script, try to wget it using cgiroot to make sure
    the webserver is properly configured and there are no Perl compile errors.
