Frontend:
  - Fix CSS to properly validate.
  - Add methods to get extra stylesheets, JavaScripts.
  - Add method to frontend class (or options to config file) to configure rate
    limit and period of error reporting, for debugging.
  - Add method to control access to each page.
  - Add a set of UserErrors (make InputValidationError a subclass) to report
    user errors in any page; e.g. AccessDeniedError, SystemBusyError (if number
    of incoming jobs exceeds some limit).
  - Queue page should highlight authenticated user's own jobs, and have a JS
    button to toggle showing all jobs or just their own.

Backend:
  - Run/check jobs using DRMAA
    - Build DRMAA Python extension (fix SWIG problems with newer SWIG so that
      the example programs run).
    - Set up for both Sali and QB3 clusters; make sure we can access both via
      DRMAA from the same script (fix problems with environment variable
      clashes if necessary).
    - Make sure that DRMAA on the QB3 cluster works with users that have
      different usernames on modbase/chef (e.g. Hao, SJ, Ursula).
    - Use drmaa_wait or drmaa_synchronize to wake up backend daemon as soon
      as a job finishes (may need to thread; make sure only one event client
      per daemon); fall back to polling if the daemon is restarted.

Build:
  - Add more unit tests.
  - After installing each CGI script, try to wget it using cgiroot to make sure
    the webserver is properly configured and there are no Perl compile errors.
  - If we are not running scons as the backend user, before recommending sudo,
    check to make sure the user exists, and if not, prompt the user to ask a
    sysadmin to add it. 
  - Add a script to set up a simple directory structure for a new service;
    test case should run it then make sure that the generated config file is
    readable; auto-generate frontend.conf and backend.conf with random
    passwords.
  - Add the 'service_module' argument back to the Environment constructor, so
    the implementer can choose a longer name for the service but use a shorter
    form for the module.
